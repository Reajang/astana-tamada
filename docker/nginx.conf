load_module modules/ngx_http_opentracing_module.so;

worker_processes  auto;
user root;
events {
    worker_connections  1024;
}

http {
    include     /usr/local/openresty/nginx/conf/mime.types;
#     include     /etc/nginx/resolver.conf;
    default_type  application/octet-stream;
    server_tokens off;

    # Disable global opentracing
    opentracing off;

    # Optionally, set additional tags.
    opentracing_tag http_user_agent $http_user_agent;

    ###################################################################
    # Connection settings
    ###################################################################

    sendfile        on;
    tcp_nopush           on;
    tcp_nodelay          on;
    keepalive_timeout    65s;
    send_timeout         600;

    gzip                 on;
    gzip_buffers     16  8k;
    gzip_comp_level       9;
    gzip_types
      text/xml
      text/css
      text/plain
      text/javascript
      application/javascript
      application/x-javascript
      application/atom+xml
      application/xml+rss
      application/xhtml+xml;

    ###################################################################
    # Common settings
    ###################################################################

    # http://nginx.org/ru/docs/http/ngx_http_proxy_module.html
    # Определяет, закрывать ли соединение с проксированным сервером в случае, если клиент закрыл соединение, не дождавшись ответа.
    proxy_ignore_client_abort on;

    # nginx 400 request header or cookie too large
    client_header_buffer_size 32k;
    large_client_header_buffers 4 64k;

    # fixed error.log warnings about 'a client request body is buffered to a temporary file'
    client_body_buffer_size 110M;
    client_max_body_size 510M;

    server {
        server_name localhost;
        #### Configuration for local deployment
        listen  80;
        autoindex off;

        root /usr/share/nginx/html/;

        # BACKEND
		location /api {
			proxy_pass http://${BACKEND_UPSTREAM};
			proxy_set_header Host            $host;
			proxy_pass_header Content-Type;

		}

		location / {
			try_files $uri $uri/ /index.html =404;
		}
    }
}
