name: Publish Docker image release version

on:
  release:
    types: [ published ]

jobs:
  build_package:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci --force

      - name: Build
        run: npm run build --prod

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tarot-frontend-artifact
          path: dist
          retention-days: 1

  push_to_docker_hub:
    name: Push Docker image to Docker Hub
    needs: build_package
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download tarot-backend-artifact
        uses: actions/download-artifact@v3
        with:
          name: tarot-frontend-artifact
          path: dist

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
            #          github.ref_name is release tag
          tags: leonidgarin/astana-ui:latest, leonidgarin/astana-ui:${{ github.ref_name }}

  deploy:
    name: Deploy
    needs: push_to_docker_hub
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Run docker compose on EC2 via ssh
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_UBUNTU_USER }}
          key: ${{ secrets.AWS_LOCAL_PK }}
          script: sudo docker-compose up --build -d ui
